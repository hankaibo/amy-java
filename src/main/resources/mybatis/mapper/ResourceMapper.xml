<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mypandora.springboot.modular.system.mapper.ResourceMapper">
    <resultMap id="ResourceMap" type="Resource">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="lft" jdbcType="INTEGER" property="lft"/>
        <result column="rgt" jdbcType="INTEGER" property="rgt"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="uri" jdbcType="VARCHAR" property="uri"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="method" jdbcType="VARCHAR" property="method"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <resultMap id="rolePermRule" type="Resource">
        <result column="url" jdbcType="VARCHAR" property="uri"/>
        <result column="needRoles" jdbcType="VARCHAR" property="needRoles"/>
    </resultMap>

    <sql id="baseColumns">
        ${alias}.id,
        ${alias}.parent_id,
        ${alias}.name,
        ${alias}.lft,
        ${alias}.rgt,
        ${alias}.level,
        ${alias}.code,
        ${alias}.status,
        ${alias}.uri,
        ${alias}.type,
        ${alias}.method,
        ${alias}.icon,
        ${alias}.description,
        ${alias}.create_time,
        ${alias}.update_time
    </sql>

    <select id="listAll" resultMap="ResourceMap" parameterType="map">
        SELECT
        <include refid="baseColumns">
            <property name="alias" value="t"/>
        </include>
        FROM sys_resource t
        WHERE 1=1
        <if test="type != null">
            AND t.type=#{type}
        </if>
        <if test="status != null">
            AND t.status=#{status}
        </if>
        ORDER BY t.lft ASC
    </select>

    <select id="listDescendants" resultMap="ResourceMap" parameterType="map">
        SELECT
        <include refid="baseColumns">
            <property name="alias" value="t"/>
        </include>
        FROM sys_resource t
        WHERE 1=1
        <if test="type != null">
            AND t.type=#{type}
        </if>
        <if test="status!=null">
            AND t.status=#{status}
        </if>
        <![CDATA[
            AND t.lft>(
                    SELECT s.lft
                    FROM sys_resource s
                    WHERE s.id=#{id})
            AND t.rgt<(
                    SELECT s.rgt
                    FROM sys_resource s
                    WHERE s.id=#{id})
        ]]>
        ORDER BY t.lft ASC
    </select>

    <select id="listChildren" resultMap="ResourceMap" parameterType="map">
        SELECT
        <include refid="baseColumns">
            <property name="alias" value="t"/>
        </include>
        FROM sys_resource t
        WHERE 1=1
        AND t.type=#{type}
        AND t.parent_id=#{id}
        <if test="status!=null">
            AND t.status=#{status}
        </if>
        ORDER BY t.lft ASC
    </select>

    <update id="parentRgtAdd" parameterType="map">
        UPDATE sys_resource t
        SET t.rgt=(t.rgt + #{amount}), t.update_time=now()
        WHERE id = #{id, jdbcType=NUMERIC}
    </update>

    <update id="lftAdd" parameterType="map">
        UPDATE sys_resource t,(SELECT * FROM sys_resource WHERE id = #{id, jdbcType=NUMERIC}) f
        SET t.lft= (t.lft + #{amount}), t.update_time=now()
        <![CDATA[
        WHERE t.lft > f.rgt
        ]]>
    </update>

    <update id="rgtAdd" parameterType="map">
        UPDATE sys_resource t,(SELECT * FROM sys_resource WHERE id = #{id, jdbcType=NUMERIC}) f
        SET t.rgt= (t.rgt + #{amount}), t.update_time=now()
        <![CDATA[
        WHERE t.rgt > f.rgt
        ]]>
    </update>

    <update id="selfAndDescendant" parameterType="map">
        UPDATE sys_resource t
        SET t.lft=(t.lft + #{amount}), t.rgt=(t.rgt + #{amount}), t.update_time=now()
        WHERE 1 = 1
        AND t.id in
        <foreach collection="idList" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="enableDescendants" parameterType="map">
        UPDATE sys_resource t
        SET t.status= #{status}, t.update_time=now()
        WHERE 1 = 1
        AND t.id in
        <foreach collection="idList" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="listRolePermRules" resultMap="rolePermRule">
        SELECT CONCAT(t.uri, "==", UPPER(t.method)) AS url,
        GROUP_CONCAT(role.code ORDER BY t.uri) AS needRoles
        FROM sys_resource t
        INNER JOIN sys_role_resource rr ON t.id = rr.resource_id
        INNER JOIN sys_role role ON rr.role_id = role.id
        WHERE 1 = 1
        AND t.`type` = 2
        GROUP BY t.uri, t.id
        ORDER BY url DESC
    </select>

    <select id="listByRoleId" resultMap="ResourceMap" parameterType="long">
        SELECT
        <include refid="baseColumns">
            <property name="alias" value="t"/>
        </include>
        FROM sys_resource t
        INNER JOIN sys_role_resource rr ON t.id = rr.resource_id
        WHERE 1 = 1
        AND rr.role_id = #{id}
    </select>

    <select id="listResourceMenuByUserId" resultMap="ResourceMap" parameterType="long">
        SELECT
        <include refid="baseColumns">
            <property name="alias" value="t"/>
        </include>
        FROM sys_resource t
        WHERE t.type=1
        AND t.status=1
        AND t.id IN (
        SELECT rr.resource_id
        FROM sys_role_resource rr
        JOIN (
        SELECT ur.role_id AS role_id
        FROM sys_user_role ur
        WHERE ur.user_id =#{userId}
        ) temp
        ON rr.role_id=temp.role_id
        )
    </select>

    <select id="listByUserIdOrName" resultMap="ResourceMap">
        SELECT
        <include refid="baseColumns">
            <property name="alias" value="t"/>
        </include>
        FROM sys_resource t
        WHERE 1=1
        AND t.id IN (
        SELECT rr.resource_id
        FROM sys_role_resource rr
        JOIN (
        SELECT ur.role_id AS role_id
        FROM sys_user_role ur
        WHERE ur.user_id =(
        SELECT id AS userId
        FROM sys_user u
        WHERE u.username=#{username} OR u.id=#{userId}
        )
        ) temp ON rr.role_id=temp.role_id
        )
    </select>

</mapper>